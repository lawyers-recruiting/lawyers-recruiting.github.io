{"version":3,"sources":["states.js","validate.js","components/Lawyer.js","components/LawyersTable.js","components/InfoBlock.js","components/App.js","index.js"],"names":["stateCodes","statesData","code","Validate","lawyerAgeString","lawyerAge","Number","isInteger","lawyerExperience","exp","income","isNaN","statesString","states","split","i","length","indexOf","dateString","test","currentDate","Date","parse","number","string","toLowerCase","Lawyer","lawyerData","columnKeys","setClassNames","columnKey","phone","age","experience","Age","yearlyIncome","hasChildren","licenseStates","expirationDate","licenseNumber","Duplicate","displayValue","replace","match","p1","p2","toFixed","map","className","LawyersTable","lawyers","keys","scope","lawyer","License_number","InfoBlock","blockStyle","text","classes","App","useState","setLawyers","setKeys","error","setError","parseLawyers","data","lawyerStrings","lawyersArr","shift","checkRequiredFields","lawyerStringsItem","ID","j","key","convertStateNames","trim","duplicateData","find","l","Email","Phone","undefined","stateString","stateName","join","formattedKeys","action","type","name","id","onChange","file","target","files","pop","reader","FileReader","readAsText","onload","result","htmlFor","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d20c4998.chunk.js","sourcesContent":["export const stateCodes = ['AL', 'AK', 'AZ', 'AR', 'CA', 'CO', 'CT', 'DE', 'DC', 'FL', 'GA', 'HI', 'ID', 'IL', 'IN', 'IA', 'KS', 'KY', 'LA', 'ME', 'MD', 'MA', 'MI', 'MN', 'MS', 'MO', 'MT', 'NE', 'NV', 'NH', 'NJ', 'NM', 'NY', 'NC', 'ND', 'OH', 'OK', 'OR', 'PA', 'RI', 'SC', 'SD', 'TN', 'TX', 'UT', 'VT', 'VA', 'WA', 'WV', 'WI', 'WY']\r\n\r\nexport const statesData = {\r\n\t'Alabama': { code: 'AL' },\r\n\t'Alaska': { code: 'AK' },\r\n\t'Arizona': { code: 'AZ' },\r\n\t'Arkansas': { code: 'AR' },\r\n\t'California': { code: 'CA' },\r\n\t'Colorado': { code: 'CO' },\r\n\t'Connecticut': { code: 'CT' },\r\n\t'Delaware': { code: 'DE' },\r\n\t'District of Columbia': { code: 'DC' },\r\n\t'Florida': { code: 'FL' },\r\n\t'Georgia': { code: 'GA' },\r\n\t'Hawaii': { code: 'HI' },\r\n\t'Idaho': { code: 'ID' },\r\n\t'Illinois': { code: 'IL' },\r\n\t'Indiana': { code: 'IN' },\r\n\t'Iowa': { code: 'IA' },\r\n\t'Kansas': { code: 'KS' },\r\n\t'Kentucky': { code: 'KY' },\r\n\t'Louisiana': { code: 'LA' },\r\n\t'Maine': { code: 'ME' },\r\n\t'Maryland': { code: 'MD' },\r\n\t'Massachusetts': { code: 'MA' },\r\n\t'Michigan': { code: 'MI' },\r\n\t'Minnesota': { code: 'MN' },\r\n\t'Mississippi': { code: 'MS' },\r\n\t'Missouri': { code: 'MO' },\r\n\t'Montana': { code: 'MT' },\r\n\t'Nebraska': { code: 'NE' },\r\n\t'Nevada': { code: 'NV' },\r\n\t'New Hampshire': { code: 'NH' },\r\n\t'New Jersey': { code: 'NJ' },\r\n\t'New Mexico': { code: 'NM' },\r\n\t'New York': { code: 'NY' },\r\n\t'North Carolina': { code: 'NC' },\r\n\t'North Dakota': { code: 'ND' },\r\n\t'Ohio': { code: 'OH' },\r\n\t'Oklahoma': { code: 'OK' },\r\n\t'Oregon': { code: 'OR' },\r\n\t'Pennsylvania': { code: 'PA' },\r\n\t'Rhode Island': { code: 'RI' },\r\n\t'South Carolina': { code: 'SC' },\r\n\t'South Dakota': { code: 'SD' },\r\n\t'Tennessee': { code: 'TN' },\r\n\t'Texas': { code: 'TX' },\r\n\t'Utah': { code: 'UT' },\r\n\t'Vermont': { code: 'VT' },\r\n\t'Virginia': { code: 'VA' },\r\n\t'Washington': { code: 'WA' },\r\n\t'West Virginia': { code: 'WV' },\r\n\t'Wisconsin': { code: 'WI' },\r\n\t'Wyoming': { code: 'WY' }\r\n}","import { stateCodes } from './states'\r\n\r\n\r\nexport class Validate {\r\n\r\n\tstatic age(lawyerAgeString) {\r\n\t\tconst lawyerAge = Number(lawyerAgeString);\r\n\t\tif (!Number.isInteger(lawyerAge)) return false;\r\n\t\tif (lawyerAge < 21) return false;\r\n\t\treturn true;\r\n\t} \r\n\r\n\tstatic experience(lawyerExperience, lawyerAge) {\r\n\t\tconst exp = Number(lawyerExperience);\r\n\t\tif (!Number.isInteger(exp)) return false;\r\n\t\tif (exp < 0 || exp > (Number(lawyerAge) - 21)) return false;\r\n\t\treturn true;\r\n\t}\r\n\r\n\tstatic yearlyIncome(income) {\r\n\t\tif (isNaN(income)) return false;\r\n\t\tif (income < 0 || income > 1000000) return false;\r\n\t\treturn true;\r\n\t} \r\n\r\n\tstatic licenseStates(statesString) {\r\n\t\tconst states = statesString.split('|')\r\n\t\tfor (var i = 0; i < states.length; i++) {\r\n\t\t\tif (stateCodes.indexOf( states[i] ) === -1) return false;\r\n\t\t}\r\n\t\treturn true;\r\n\t} \r\n\r\n\tstatic expirationDate(dateString) {\r\n\t\tconst regExp1 = /^20[2-9][1-9]-(0[1-9]|1[0-2])-([0-2][0-9]|3[0-1])$/;\r\n\t\tconst regExp2 = /^(0[1-9]|1[0-2])\\/([0-2][0-9]|3[0-1])\\/20[2-9][1-9]$/;\r\n\t\tif (!regExp1.test(dateString) && !regExp2.test(dateString)) return false;\r\n\t\tconst currentDate = new Date();\r\n\t\tif (Date.parse(dateString) < currentDate) return false;\r\n\t\treturn true;\r\n\t}\r\n\r\n\tstatic phone(number) {\r\n\t\tconst regExp = /^(1|\\+1)?\\d{10}$/;\r\n\t\tif (!regExp.test(number)) return false;\r\n\t\treturn true;\r\n\t}\r\n\r\n\tstatic hasChildren(string) {\r\n\t\tif (string.toLowerCase() === 'true' || string.toLowerCase() === 'false' || string.toLowerCase() === '') {\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\tstatic licenseNumber(number) {\r\n\t\tconst regExp = /^[0-9A-Za-z]{6}$/;\r\n\t\tif (!regExp.test(number)) return false;\r\n\t\treturn true;\r\n\t\t\r\n\t}\r\n\r\n}\r\n","import React  from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Validate } from '../validate'\r\n\r\n\r\nconst Lawyer = ({ lawyerData, columnKeys }) => {\r\n\r\n\tconst formatPhone = number => {\r\n\r\n\t\treturn number.replace(/^(1|\\+1)?(\\d{10})$/, (match,p1,p2) => {\r\n\t\t\treturn '+1' + p2\r\n\t\t})\r\n\t}\r\n\r\n\tconst setClassNames = columnKey => {\r\n\t\tswitch (columnKey.toLowerCase()) {\r\n\r\n\t\t\tcase 'phone':\r\n\t\t\treturn Validate.phone(lawyerData[columnKey]) ? 'ok' : 'error'\r\n\r\n\t\t\tcase 'age':\r\n\t\t\treturn Validate.age(lawyerData[columnKey]) ? 'ok' : 'error'\r\n\r\n\t\t\tcase 'experience':\r\n\t\t\treturn Validate.experience(lawyerData[columnKey], lawyerData.Age) ? 'ok' : 'error'\r\n\r\n\t\t\tcase 'yearly income':\r\n\t\t\treturn Validate.yearlyIncome(lawyerData[columnKey]) ? 'ok' : 'error'\r\n\r\n\t\t\tcase 'has children':\r\n\t\t\treturn Validate.hasChildren(lawyerData[columnKey]) ? 'ok' : 'error'\r\n\r\n\t\t\tcase 'license states':\r\n\t\t\treturn Validate.licenseStates(lawyerData[columnKey]) ? 'ok' : 'error'\r\n\r\n\t\t\tcase 'expiration date':\r\n\t\t\treturn Validate.expirationDate(lawyerData[columnKey]) ? 'ok' : 'error'\r\n\r\n\t\t\tcase 'license number':\r\n\t\t\treturn Validate.licenseNumber(lawyerData[columnKey]) ? 'ok' : 'error'\r\n\r\n\t\t\tcase 'duplicate':\r\n\t\t\treturn lawyerData.Duplicate ? 'ok' : 'error'\r\n\r\n\t\t\tdefault:\r\n\t\t\treturn ''\r\n\t\t}\t\r\n\t}\r\n\r\n\tconst displayValue = columnKey => {\r\n\t\tswitch (columnKey.toLowerCase()) {\r\n\r\n\t\t\tcase 'phone':\r\n\t\t\treturn formatPhone(lawyerData[columnKey])\r\n\r\n\t\t\tcase 'yearly income':\r\n\t\t\treturn Number(lawyerData[columnKey]).toFixed(2)\r\n\r\n\t\t\tdefault:\r\n\t\t\treturn lawyerData[columnKey]\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<tr>\r\n\t\t\t{columnKeys.map(columnKey => <td  className={setClassNames(columnKey)} >{displayValue(columnKey)}</td>)}\r\n\t\t</tr>\r\n\t)\r\n}\r\n\r\n\r\nLawyer.propTypes = {\r\n\tlawyerData: PropTypes.object,\r\n\tcolumnKeys: PropTypes.array\r\n}\r\n\r\n\r\nexport default Lawyer\r\n","import React  from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Lawyer from './Lawyer'\r\n\r\n\r\nconst LawyersTable = ({ lawyers, keys }) => {\r\n\r\n\t\r\n\treturn (\r\n\t\t<div className=\"lawyers-table-wrap\">\r\n\t\t{lawyers.length > 0 && (\r\n\t\t\t<table className=\"lawyers-table table table-striped\">\r\n\t\t\t\t<thead>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t{keys.map(columnKey => <th scope=\"col\">{columnKey}</th>)}\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t{lawyers.map(lawyer => <Lawyer lawyerData={lawyer} key={lawyer.License_number} columnKeys={keys} />)}\r\n\t\t\t\t</tbody>\r\n\t\t\t\t\r\n\t\t\t</table>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n\r\nLawyersTable.propTypes = {\r\n\tkeys: PropTypes.array,\r\n\tlawyers: PropTypes.array\r\n}\r\n\r\n\r\nexport default LawyersTable","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nconst InfoBlock = ({ blockStyle, text }) => {\r\n\r\n\tconst classes = `info-block card card-body ${blockStyle}` \r\n\r\n\treturn (\r\n\t\t<div className=\"row justify-content-center\">\r\n\t\t\t<div className=\"col-6\">\r\n\t\t\t\t<div className={classes}>{text}</div>\r\n\t\t\t</div>\t\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n\r\nInfoBlock.propTypes = {\r\n\tblockStyle: PropTypes.string,\r\n\ttext: PropTypes.string\r\n}\r\n\r\n\r\nexport default InfoBlock","import React, { useState }  from 'react'\r\nimport LawyersTable from './LawyersTable'\r\nimport InfoBlock from './InfoBlock'\r\nimport { statesData } from '../states'\r\n\r\n\r\nconst App = () => {\r\n\r\n\tconst [lawyers, setLawyers] = useState([])\r\n\tconst [keys, setKeys] = useState([])\r\n\tconst [error, setError] = useState('')\r\n\r\n\tconst onImportChange = ({ target }) => {\r\n\r\n\t\tconst file = target.files[0]\r\n\r\n\t\tif (file) {\r\n\t\t\tif (file.name.split('.').pop() === 'csv') {\r\n\t\t\t\tsetError(null)\r\n\t\t\t\tlet reader = new FileReader()\r\n\t\t\t\treader.readAsText(file)\r\n\t\t\t\treader.onload = () => {\r\n\t\t\t\t\tparseLawyers(reader.result);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tsetError('File format is not correct')\r\n\t\t\t}\r\n\t\t}\t\t\r\n\t\t\r\n\t}\r\n\r\n\tconst parseLawyers = data => {\r\n\r\n\t\tconst lawyerStrings = data.split(/\\r?\\n|\\r/)\r\n\t\tlet lawyersArr = []\r\n\t\tconst keys = lawyerStrings.shift().split(',')\r\n\r\n\t\tif (!checkRequiredFields(keys)) {\r\n\t\t\tsetError('File format is not correct')\r\n\t\t\treturn false\r\n\t\t}\r\n\r\n\t\tfor (var i = 0; i < lawyerStrings.length; i++) {\r\n\t\t\tconst lawyerStringsItem = lawyerStrings[i].split(',')\r\n\t\t\tlawyersArr[i] = {ID: i+1}\r\n\t\t\tfor (var j = 0; j < lawyerStringsItem.length; j++) {\r\n\t\t\t\tconst key = keys[j];\r\n\t\t\t\tlawyersArr[i][key] = (key === 'License_states') ? convertStateNames(lawyerStringsItem[j].trim()) : lawyerStringsItem[j].trim()\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlawyersArr.map(lawyer => {\t\t\t\r\n\t\t\tconst duplicateData = lawyersArr.find(l => (l.Email.toLowerCase() === lawyer.Email.toLowerCase() || l.Phone === lawyer.Phone ) && l.ID !== lawyer.ID)\r\n\t\t\tlawyer.Duplicate = (duplicateData === undefined) ? '' : duplicateData.ID\t\t\r\n\t\t\treturn lawyer\r\n\t\t})\r\n\r\n\t\tsetLawyers(lawyersArr)\r\n\t\tsetKeys(['ID', ...keys, 'Duplicate'])\r\n\t}\r\n\r\n\tconst convertStateNames = stateString => {\r\n\r\n\t\tconst licenseStates = stateString.split('|')\r\n\r\n\t\treturn licenseStates.map(stateName => {\r\n\t\t\tif (statesData[stateName] === undefined) {\r\n\t\t\t\treturn stateName\r\n\t\t\t} else {\r\n\t\t\t\treturn statesData[stateName].code\r\n\t\t\t}\r\n\t\t}).join('|')\r\n\t} \r\n\r\n\tconst checkRequiredFields = keys => {\r\n\r\n\t\tconst formattedKeys = keys.map(key => key.toLowerCase())\r\n\r\n\t\tif (formattedKeys.indexOf('full name') === -1 || formattedKeys.indexOf('phone') === -1 || formattedKeys.indexOf('email') === -1) {\r\n\t\t\treturn false\r\n\t\t} else {\r\n\t\t\treturn true\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<main className=\"main\">\r\n\t\t<div className=\"container\">\r\n\t\t<h1 className=\"text-center mb-3\">Lawyers List</h1>\r\n\t\t<form action=\"\" className=\"d-flex justify-content-end mb-3\">\r\n\t\t<input \r\n\t\ttype=\"file\" \r\n\t\tname=\"list\" id=\"list\" \r\n\t\tclassName=\"d-none\"\r\n\t\tonChange={onImportChange}\r\n\t\t/>\r\n\t\t<label htmlFor=\"list\" className=\"btn btn-success\">Import users</label>\r\n\t\t</form>\r\n\t\t{error ? <InfoBlock blockStyle='text-center error' text={error} /> : (lawyers.length > 0) ? <LawyersTable lawyers={lawyers} keys={keys} /> : <InfoBlock blockStyle='text-center info' text='Please, upload your file' />}\t\t\t\t\r\n\t\t</div>\r\n\t\t</main>\r\n\t\t)\r\n}\r\n\r\n\r\nexport default App\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './scss/app.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}